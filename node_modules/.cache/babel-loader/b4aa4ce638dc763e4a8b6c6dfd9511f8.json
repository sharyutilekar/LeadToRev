{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanket J\\\\Desktop\\\\COVID-19 and Population Dashboard\\\\src\\\\App.js\";\n// App.js\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport CountrySelector from './components/CountrySelector';\nimport StatCard from './components/StatCard';\nimport LineChartComponent from './components/LineChartComponent';\nimport PieChartComponent from './components/PieChartComponent';\nimport './style/App.css';\nconst App = () => {\n  const [countries, setCountries] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('USA');\n  const [covidData, setCovidData] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    axios.get('https://restcountries.com/v3.1/all').then(res => {\n      const formatted = res.data.map(c => ({\n        name: c.name.common,\n        code: c.cca2.toLowerCase()\n      })).sort((a, b) => a.name.localeCompare(b.name));\n      setCountries(formatted);\n    }).catch(err => setError('Failed to fetch country list.'));\n  }, []);\n  useEffect(() => {\n    axios.get(`https://disease.sh/v3/covid-19/historical/${selectedCountry}?lastdays=1500`).then(res => setCovidData(res.data)).catch(err => setError('Failed to fetch COVID data.'));\n  }, [selectedCountry]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"COVID-19 and Population Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CountrySelector, {\n    countries: countries,\n    selected: selectedCountry,\n    onChange: setSelectedCountry,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  })), error && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, error), covidData && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(StatCard, {\n    title: \"Total Cases\",\n    value: \"5M\",\n    color: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StatCard, {\n    title: \"Recoveries\",\n    value: \"4.2M\",\n    color: \"green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(StatCard, {\n    title: \"Deaths\",\n    value: \"0.2M\",\n    color: \"red\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"charts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(LineChartComponent, {\n    data: covidData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PieChartComponent, {\n    data: covidData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","axios","CountrySelector","StatCard","LineChartComponent","PieChartComponent","App","countries","setCountries","selectedCountry","setSelectedCountry","covidData","setCovidData","error","setError","get","then","res","formatted","data","map","c","name","common","code","cca2","toLowerCase","sort","a","b","localeCompare","catch","err","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","selected","onChange","Fragment","title","value","color"],"sources":["C:/Users/Sanket J/Desktop/COVID-19 and Population Dashboard/src/App.js"],"sourcesContent":["// App.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport CountrySelector from './components/CountrySelector';\r\nimport StatCard from './components/StatCard';\r\nimport LineChartComponent from './components/LineChartComponent';\r\nimport PieChartComponent from './components/PieChartComponent';\r\nimport './style/App.css';\r\n\r\nconst App = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [selectedCountry, setSelectedCountry] = useState('USA');\r\n  const [covidData, setCovidData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios.get('https://restcountries.com/v3.1/all')\r\n      .then(res => {\r\n        const formatted = res.data.map(c => ({\r\n          name: c.name.common,\r\n          code: c.cca2.toLowerCase(),\r\n        })).sort((a, b) => a.name.localeCompare(b.name));\r\n        setCountries(formatted);\r\n      })\r\n      .catch(err => setError('Failed to fetch country list.'));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://disease.sh/v3/covid-19/historical/${selectedCountry}?lastdays=1500`)\r\n      .then(res => setCovidData(res.data))\r\n      .catch(err => setError('Failed to fetch COVID data.'));\r\n  }, [selectedCountry]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h1>COVID-19 and Population Dashboard</h1>\r\n      <div className=\"controls\">\r\n        <CountrySelector \r\n          countries={countries} \r\n          selected={selectedCountry} \r\n          onChange={setSelectedCountry} \r\n        />\r\n        {/* Add date filter UI here if implementing */}\r\n      </div>\r\n      {error && <p className=\"error\">{error}</p>}\r\n      {covidData && (\r\n        <>\r\n          <div className=\"stats\">\r\n            <StatCard title=\"Total Cases\" value=\"5M\" color=\"blue\" />\r\n            <StatCard title=\"Recoveries\" value=\"4.2M\" color=\"green\" />\r\n            <StatCard title=\"Deaths\" value=\"0.2M\" color=\"red\" />\r\n          </div>\r\n          <div className=\"charts\">\r\n            <LineChartComponent data={covidData} />\r\n            <PieChartComponent data={covidData} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}